package me.josephsf.jobportaljosephsfeir.model;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import java.time.LocalDateTime;

/**
 * Represents a recruiter profile in the Job Portal application.
 *
 * <p>This class is mapped to the "recruiters" collection in MongoDB using the
 * Spring Data MongoDB {@link Document} annotation. It extends the basic user
 * account with recruiter-specific information, including company details,
 * professional information, and verification status.</p>
 *
 * <p>Each recruiter is associated with a user account and can post jobs,
 * review applications, and manage their company profile. Recruiters may need
 * to be verified before they can fully use the platform.</p>
 *
 * @author Joseph Sfeir
 * @version 1.0
 * @since 2025-05-15
 */
@Document(collection = "recruiters")
public class Recruiter {

    /**
     * Unique identifier for the recruiter profile, automatically generated by MongoDB.
     */
    @Id
    private String id;

    /**
     * Reference to the user ID in the users collection, establishing a one-to-one
     * relationship between a user account and recruiter profile.
     *
     * @see User# id
     */
    private String userId;

    /**
     * Name of the company the recruiter represents.
     */
    private String companyName;

    /**
     * Size of the company the recruiter represents.
     * Possible values: STARTUP, SMALL, MEDIUM, LARGE, ENTERPRISE
     */
    private String companySize;

    /**
     * Location of the company's headquarters or offices.
     */
    private String location;

    /**
     * Industry sector the company operates in.
     */
    private String industry;

    /**
     * Department within the company that the recruiter works for.
     */
    private String department;

    /**
     * Position or job title of the recruiter within the company.
     */
    private String position;

    /**
     * Contact phone number for the recruiter.
     */
    private String phoneNumber;

    /**
     * URL to the recruiter's LinkedIn profile.
     */
    private String linkedInUrl;

    /**
     * URL to the company's website.
     */
    private String companyWebsite;

    /**
     * Detailed description of the company.
     */
    private String companyDescription;

    /**
     * Flag indicating whether the recruiter's profile has been verified by administrators.
     */
    private Boolean isVerified;

    /**
     * Date and time when the recruiter profile was created.
     */
    private LocalDateTime createdAt;

    /**
     * Date and time when the recruiter profile was last updated.
     */
    private LocalDateTime updatedAt;

    /**
     * Constructs a new Recruiter instance with default values.
     * Sets creation and update timestamps to the current time,
     * and sets the verification status to false by default.
     */
    public Recruiter() {
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
        this.isVerified = false;
    }

    // Getters and Setters

    /**
     * Gets the unique identifier of the recruiter profile.
     *
     * @return the recruiter profile ID
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the recruiter profile.
     *
     * @param id the recruiter profile ID to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Gets the user ID associated with this recruiter profile.
     *
     * @return the user ID
     */
    public String getUserId() {
        return userId;
    }

    /**
     * Sets the user ID associated with this recruiter profile.
     *
     * @param userId the user ID to set
     */
    public void setUserId(String userId) {
        this.userId = userId;
    }

    /**
     * Gets the name of the company the recruiter represents.
     *
     * @return the company name
     */
    public String getCompanyName() {
        return companyName;
    }

    /**
     * Sets the name of the company the recruiter represents.
     *
     * @param companyName the company name to set
     */
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    /**
     * Gets the size of the company the recruiter represents.
     *
     * @return the company size category
     */
    public String getCompanySize() {
        return companySize;
    }

    /**
     * Sets the size of the company the recruiter represents.
     *
     * @param companySize the company size category to set
     */
    public void setCompanySize(String companySize) {
        this.companySize = companySize;
    }

    /**
     * Gets the location of the company.
     *
     * @return the company location
     */
    public String getLocation() {
        return location;
    }

    /**
     * Sets the location of the company.
     *
     * @param location the company location to set
     */
    public void setLocation(String location) {
        this.location = location;
    }

    /**
     * Gets the industry sector the company operates in.
     *
     * @return the industry sector
     */
    public String getIndustry() {
        return industry;
    }

    /**
     * Sets the industry sector the company operates in.
     *
     * @param industry the industry sector to set
     */
    public void setIndustry(String industry) {
        this.industry = industry;
    }

    /**
     * Gets the department the recruiter works for.
     *
     * @return the department name
     */
    public String getDepartment() {
        return department;
    }

    /**
     * Sets the department the recruiter works for.
     *
     * @param department the department name to set
     */
    public void setDepartment(String department) {
        this.department = department;
    }

    /**
     * Gets the recruiter's position within the company.
     *
     * @return the position title
     */
    public String getPosition() {
        return position;
    }

    /**
     * Sets the recruiter's position within the company.
     *
     * @param position the position title to set
     */
    public void setPosition(String position) {
        this.position = position;
    }

    /**
     * Gets the recruiter's contact phone number.
     *
     * @return the phone number
     */
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Sets the recruiter's contact phone number.
     *
     * @param phoneNumber the phone number to set
     */
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * Gets the URL to the recruiter's LinkedIn profile.
     *
     * @return the LinkedIn profile URL
     */
    public String getLinkedInUrl() {
        return linkedInUrl;
    }

    /**
     * Sets the URL to the recruiter's LinkedIn profile.
     *
     * @param linkedInUrl the LinkedIn profile URL to set
     */
    public void setLinkedInUrl(String linkedInUrl) {
        this.linkedInUrl = linkedInUrl;
    }

    /**
     * Gets the URL to the company's website.
     *
     * @return the company website URL
     */
    public String getCompanyWebsite() {
        return companyWebsite;
    }

    /**
     * Sets the URL to the company's website.
     *
     * @param companyWebsite the company website URL to set
     */
    public void setCompanyWebsite(String companyWebsite) {
        this.companyWebsite = companyWebsite;
    }

    /**
     * Gets the detailed description of the company.
     *
     * @return the company description
     */
    public String getCompanyDescription() {
        return companyDescription;
    }

    /**
     * Sets the detailed description of the company.
     *
     * @param companyDescription the company description to set
     */
    public void setCompanyDescription(String companyDescription) {
        this.companyDescription = companyDescription;
    }

    /**
     * Checks if the recruiter profile has been verified.
     *
     * @return true if the profile is verified, false otherwise
     */
    public Boolean getIsVerified() {
        return isVerified;
    }

    /**
     * Sets whether the recruiter profile has been verified.
     *
     * @param isVerified the verification status to set
     */
    public void setIsVerified(Boolean isVerified) {
        this.isVerified = isVerified;
    }

    /**
     * Gets the date and time when the recruiter profile was created.
     *
     * @return the creation timestamp
     */
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets the date and time when the recruiter profile was created.
     *
     * @param createdAt the creation timestamp to set
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Gets the date and time when the recruiter profile was last updated.
     *
     * @return the update timestamp
     */
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Sets the date and time when the recruiter profile was last updated.
     *
     * @param updatedAt the update timestamp to set
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }
}