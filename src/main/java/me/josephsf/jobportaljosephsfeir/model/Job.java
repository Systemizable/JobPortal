package me.josephsf.jobportaljosephsfeir.model;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import java.time.LocalDateTime;
import java.util.List;

/**
 * Represents a job posting in the Job Portal application.
 *
 * <p>This class is mapped to the "jobs" collection in MongoDB using the
 * Spring Data MongoDB {@link Document} annotation. It contains all information
 * related to a job posting, including details about the position, company,
 * requirements, responsibilities, and status.</p>
 *
 * <p>Each job posting is created by a recruiter and can be applied to by candidates.
 * Jobs can be active or inactive, and have various metadata such as posting date,
 * application deadline, and timestamps for creation and updates.</p>
 *
 * @author Joseph Sfeir
 * @version 1.0
 * @since 2025-05-15
 */
@Document(collection = "jobs")
public class Job {

    /**
     * Unique identifier for the job posting, automatically generated by MongoDB.
     */
    @Id
    private String id;

    /**
     * Title of the job position.
     */
    private String title;

    /**
     * Detailed description of the job position.
     */
    private String description;

    /**
     * Name of the company offering the job.
     */
    private String companyName;

    /**
     * Location where the job is based (city, country, or remote).
     */
    private String location;

    /**
     * Category of the job (e.g., IT, Marketing, Finance).
     */
    private String category;

    /**
     * Type of employment offered.
     * Possible values: FULL_TIME, PART_TIME, CONTRACT, INTERNSHIP
     */
    private String employmentType;

    /**
     * Annual salary offered for the position (optional).
     */
    private Double salary;

    /**
     * ID of the recruiter who posted the job, references {@link Recruiter# id}.
     */
    private String recruiterId;

    /**
     * List of requirements/qualifications needed for the job.
     */
    private List<String> requirements;

    /**
     * List of responsibilities/duties for the job position.
     */
    private List<String> responsibilities;

    /**
     * Flag indicating whether the job posting is active and visible to candidates.
     */
    private Boolean isActive;

    /**
     * Date and time when the job was posted.
     */
    private LocalDateTime postedDate;

    /**
     * Deadline for applying to the job (optional).
     */
    private LocalDateTime deadline;

    /**
     * Date and time when the job record was created.
     */
    private LocalDateTime createdAt;

    /**
     * Date and time when the job record was last updated.
     */
    private LocalDateTime updatedAt;

    /**
     * Constructs a new Job instance with default values.
     * Sets creation, update, and posted timestamps to the current time,
     * and sets the job as active by default.
     */
    public Job() {
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
        this.postedDate = LocalDateTime.now();
        this.isActive = true;
    }

    // Getters and Setters

    /**
     * Gets the unique identifier of the job.
     *
     * @return the job ID
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the job.
     *
     * @param id the job ID to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Gets the title of the job position.
     *
     * @return the job title
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the title of the job position.
     *
     * @param title the job title to set
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Gets the detailed description of the job.
     *
     * @return the job description
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the detailed description of the job.
     *
     * @param description the job description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Gets the name of the company offering the job.
     *
     * @return the company name
     */
    public String getCompanyName() {
        return companyName;
    }

    /**
     * Sets the name of the company offering the job.
     *
     * @param companyName the company name to set
     */
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    /**
     * Gets the location where the job is based.
     *
     * @return the job location
     */
    public String getLocation() {
        return location;
    }

    /**
     * Sets the location where the job is based.
     *
     * @param location the job location to set
     */
    public void setLocation(String location) {
        this.location = location;
    }

    /**
     * Gets the category of the job.
     *
     * @return the job category
     */
    public String getCategory() {
        return category;
    }

    /**
     * Sets the category of the job.
     *
     * @param category the job category to set
     */
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Gets the type of employment offered.
     *
     * @return the employment type
     */
    public String getEmploymentType() {
        return employmentType;
    }

    /**
     * Sets the type of employment offered.
     *
     * @param employmentType the employment type to set
     */
    public void setEmploymentType(String employmentType) {
        this.employmentType = employmentType;
    }

    /**
     * Gets the annual salary offered for the position.
     *
     * @return the salary amount
     */
    public Double getSalary() {
        return salary;
    }

    /**
     * Sets the annual salary offered for the position.
     *
     * @param salary the salary amount to set
     */
    public void setSalary(Double salary) {
        this.salary = salary;
    }

    /**
     * Gets the ID of the recruiter who posted the job.
     *
     * @return the recruiter ID
     */
    public String getRecruiterId() {
        return recruiterId;
    }

    /**
     * Sets the ID of the recruiter who posted the job.
     *
     * @param recruiterId the recruiter ID to set
     */
    public void setRecruiterId(String recruiterId) {
        this.recruiterId = recruiterId;
    }

    /**
     * Gets the list of requirements for the job.
     *
     * @return the job requirements
     */
    public List<String> getRequirements() {
        return requirements;
    }

    /**
     * Sets the list of requirements for the job.
     *
     * @param requirements the job requirements to set
     */
    public void setRequirements(List<String> requirements) {
        this.requirements = requirements;
    }

    /**
     * Gets the list of responsibilities for the job.
     *
     * @return the job responsibilities
     */
    public List<String> getResponsibilities() {
        return responsibilities;
    }

    /**
     * Sets the list of responsibilities for the job.
     *
     * @param responsibilities the job responsibilities to set
     */
    public void setResponsibilities(List<String> responsibilities) {
        this.responsibilities = responsibilities;
    }

    /**
     * Checks if the job posting is active.
     *
     * @return true if the job is active, false otherwise
     */
    public Boolean getIsActive() {
        return isActive;
    }

    /**
     * Sets whether the job posting is active.
     *
     * @param isActive the active status to set
     */
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    /**
     * Gets the date and time when the job was posted.
     *
     * @return the posted date
     */
    public LocalDateTime getPostedDate() {
        return postedDate;
    }

    /**
     * Sets the date and time when the job was posted.
     *
     * @param postedDate the posted date to set
     */
    public void setPostedDate(LocalDateTime postedDate) {
        this.postedDate = postedDate;
    }

    /**
     * Gets the deadline for applying to the job.
     *
     * @return the application deadline
     */
    public LocalDateTime getDeadline() {
        return deadline;
    }

    /**
     * Sets the deadline for applying to the job.
     *
     * @param deadline the application deadline to set
     */
    public void setDeadline(LocalDateTime deadline) {
        this.deadline = deadline;
    }

    /**
     * Gets the date and time when the job record was created.
     *
     * @return the creation timestamp
     */
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets the date and time when the job record was created.
     *
     * @param createdAt the creation timestamp to set
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Gets the date and time when the job record was last updated.
     *
     * @return the update timestamp
     */
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Sets the date and time when the job record was last updated.
     *
     * @param updatedAt the update timestamp to set
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }
}