package me.josephsf.jobportaljosephsfeir.model;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import java.time.LocalDateTime;

/**
 * Represents a job application submitted by a candidate for a specific job posting.
 *
 * <p>This class is mapped to the "job_applications" collection in MongoDB using the
 * Spring Data MongoDB {@link Document} annotation. It maintains the relationship
 * between a job posting and a candidate, along with application status, documents,
 * and review information.</p>
 *
 * <p>Job applications progress through various statuses (applied, reviewing, shortlisted,
 * rejected, accepted) as they move through the recruitment process. Recruiters can add
 * review notes and interview notes to track the candidate's progress.</p>
 *
 * @author Joseph Sfeir
 * @version 1.0
 * @since 2025-05-15
 */
@Document(collection = "job_applications")
public class JobApplication {

    /**
     * Unique identifier for the job application, automatically generated by MongoDB.
     */
    @Id
    private String id;

    /**
     * ID of the job being applied for, references {@link Job# id}.
     */
    private String jobId;

    /**
     * ID of the candidate applying for the job, references {@link Candidate# id}.
     */
    private String candidateId;

    /**
     * Current status of the application.
     * Possible values: APPLIED, REVIEWING, SHORTLISTED, REJECTED, ACCEPTED
     */
    private String status;

    /**
     * Cover letter submitted by the candidate with the application.
     */
    private String coverLetter;

    /**
     * URL to the candidate's resume document.
     */
    private String resumeUrl;

    /**
     * Date and time when the application was submitted.
     */
    private LocalDateTime applicationDate;

    /**
     * Date and time when the application was last reviewed by a recruiter.
     */
    private LocalDateTime reviewDate;

    /**
     * Notes added by the recruiter during the review process.
     */
    private String reviewNotes;

    /**
     * Notes added by the recruiter after interviewing the candidate.
     */
    private String interviewNotes;

    /**
     * Date and time when the application record was created.
     */
    private LocalDateTime createdAt;

    /**
     * Date and time when the application record was last updated.
     */
    private LocalDateTime updatedAt;

    /**
     * Constructs a new JobApplication instance with default values.
     * Sets creation, update, and application timestamps to the current time,
     * and sets the status to "APPLIED" by default.
     */
    public JobApplication() {
        this.applicationDate = LocalDateTime.now();
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
        this.status = "APPLIED";
    }

    // Getters and Setters

    /**
     * Gets the unique identifier of the job application.
     *
     * @return the application ID
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the job application.
     *
     * @param id the application ID to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Gets the ID of the job being applied for.
     *
     * @return the job ID
     */
    public String getJobId() {
        return jobId;
    }

    /**
     * Sets the ID of the job being applied for.
     *
     * @param jobId the job ID to set
     */
    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    /**
     * Gets the ID of the candidate applying for the job.
     *
     * @return the candidate ID
     */
    public String getCandidateId() {
        return candidateId;
    }

    /**
     * Sets the ID of the candidate applying for the job.
     *
     * @param candidateId the candidate ID to set
     */
    public void setCandidateId(String candidateId) {
        this.candidateId = candidateId;
    }

    /**
     * Gets the current status of the application.
     *
     * @return the application status
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the current status of the application.
     *
     * @param status the application status to set
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Gets the cover letter submitted with the application.
     *
     * @return the cover letter text
     */
    public String getCoverLetter() {
        return coverLetter;
    }

    /**
     * Sets the cover letter submitted with the application.
     *
     * @param coverLetter the cover letter text to set
     */
    public void setCoverLetter(String coverLetter) {
        this.coverLetter = coverLetter;
    }

    /**
     * Gets the URL to the candidate's resume.
     *
     * @return the resume URL
     */
    public String getResumeUrl() {
        return resumeUrl;
    }

    /**
     * Sets the URL to the candidate's resume.
     *
     * @param resumeUrl the resume URL to set
     */
    public void setResumeUrl(String resumeUrl) {
        this.resumeUrl = resumeUrl;
    }

    /**
     * Gets the date and time when the application was submitted.
     *
     * @return the application date
     */
    public LocalDateTime getApplicationDate() {
        return applicationDate;
    }

    /**
     * Sets the date and time when the application was submitted.
     *
     * @param applicationDate the application date to set
     */
    public void setApplicationDate(LocalDateTime applicationDate) {
        this.applicationDate = applicationDate;
    }

    /**
     * Gets the date and time when the application was last reviewed.
     *
     * @return the review date
     */
    public LocalDateTime getReviewDate() {
        return reviewDate;
    }

    /**
     * Sets the date and time when the application was last reviewed.
     *
     * @param reviewDate the review date to set
     */
    public void setReviewDate(LocalDateTime reviewDate) {
        this.reviewDate = reviewDate;
    }

    /**
     * Gets the recruiter's notes on the application review.
     *
     * @return the review notes
     */
    public String getReviewNotes() {
        return reviewNotes;
    }

    /**
     * Sets the recruiter's notes on the application review.
     *
     * @param reviewNotes the review notes to set
     */
    public void setReviewNotes(String reviewNotes) {
        this.reviewNotes = reviewNotes;
    }

    /**
     * Gets the recruiter's notes on the candidate interview.
     *
     * @return the interview notes
     */
    public String getInterviewNotes() {
        return interviewNotes;
    }

    /**
     * Sets the recruiter's notes on the candidate interview.
     *
     * @param interviewNotes the interview notes to set
     */
    public void setInterviewNotes(String interviewNotes) {
        this.interviewNotes = interviewNotes;
    }

    /**
     * Gets the date and time when the application record was created.
     *
     * @return the creation timestamp
     */
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets the date and time when the application record was created.
     *
     * @param createdAt the creation timestamp to set
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Gets the date and time when the application record was last updated.
     *
     * @return the update timestamp
     */
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Sets the date and time when the application record was last updated.
     *
     * @param updatedAt the update timestamp to set
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }
}